[{"id":0,"href":"/post/first-post-slug/","title":"First post!","parent":"Posts","content":"This is my first post, how exciting!\n"},{"id":1,"href":"/","title":"","parent":"","content":"About    Welcome to my question-writing guide! The aim of this document is to give you a practical idea on what dynamic questions are, how they differ to the usual \u0026lsquo;static\u0026rsquo; questions, and provide some coding techniques that will hopefully make the process of writing questions easier.\n The guide is currently incomplete; only Sections 1 and 2 of this guide have been properly written.\n Regarding prerequisites: For Sections 1 and 2, knowledge of basic HTML syntax and AsciiMath would be useful. From Section 3, I\u0026rsquo;ll begin including snippets of PHP code to aid with explanations - knowledge of arrays, conditionals (if/else), loops (for/while), and functions will probably be required then.\nIf you have any questions or confusions while reading this, please feel free to contact me! The guide is still pretty new and I\u0026rsquo;m sure there\u0026rsquo;ll be quite a few spots I\u0026rsquo;ve forgotten to clear up.\n Important: Please note that this document is not meant to be read all at once! I\u0026rsquo;ve intended it as something that you can frequently come back to if you\u0026rsquo;re ever stuck on something.\n Section 1 (the introduction) talks about how to use the QBM itself; Section 2 focuses on general dos and don\u0026rsquo;ts with designing and coding questions; The remaining sections will cover more specific situations that arise with certain kinds of math questions.  If you\u0026rsquo;ve already read the original QBM guide and just want a quick look at some new advice with dynamic questions in general, then you might want to begin with 2.1. Common Issues with Dynamic Questions and 2.2. General Design Guidelines!\n "},{"id":2,"href":"/post/math-sample/","title":"Math Sample","parent":"Posts","content":"KaTeX can be used to generate complex math formulas. It supports in-line math using the \\\\( ... \\\\) delimiters, like this: \\( E = mc^2 \\). By default, it does not support in-line delimiters $...$ because those occur too commonly in typical webpages. It supports displayed math using the $$ or \\\\[...\\\\] delimiters, like this:\nFormula 1: \\( \\phi = \\frac{(1+\\sqrt{5})}{2} = 1.6180339887\\cdots \\)\nFormula 2: (same formula, different delimiter) \\[ \\phi = \\frac{(1+\\sqrt{5})}{2} = 1.6180339887\\cdots \\]\nAdditional details can be found on GitHub or on the Wiki.\nExample 1 If the text between $$ contains newlines it will rendered in display mode:\n$$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ \\[ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi \\]\nExample 2 $$ \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}} {1+\\frac{e^{-8\\pi}} {1+\\cdots} } } } $$ \\[ \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}} {1+\\frac{e^{-8\\pi}} {1+\\cdots} } } } \\]\nExample 3 $$ 1 + \\frac{q^2}{(1-q)}+\\frac{q^6}{(1-q)(1-q^2)}+\\cdots = \\prod_{j=0}^{\\infty}\\frac{1}{(1-q^{5j+2})(1-q^{5j+3})}, \\quad\\quad \\text{for }\\lvert q\\rvert\u0026lt;1. $$ \\[ 1 + \\frac{q^2}{(1-q)}+\\frac{q^6}{(1-q)(1-q^2)}+\\cdots = \\prod_{j=0}^{\\infty}\\frac{1}{(1-q^{5j+2})(1-q^{5j+3})}, \\quad\\quad \\text{for }\\lvert q\\rvertExample 4 Remember, certain characters are rendered by markdown, so you may need to workaround those issues. You can find the complete list of KaTeX supported functions here: https://khan.github.io/KaTeX/docs/supported.html\nFor example, the ' character can be replaced with ^\\prime:\n\\[ G^\\prime = G - u \\]\nThe \u0026quot; character can be replaced with ^{\\prime\\prime}:\n\\[ G^{\\prime\\prime} = G^\\prime - v \\]\n"},{"id":3,"href":"/post/","title":"Posts","parent":"","content":""},{"id":4,"href":"/tags/code/","title":"code","parent":"Tags","content":""},{"id":5,"href":"/post/code-sample/","title":"Code Sample","parent":"Posts","content":"The following are two code samples using syntax highlighting.\nThe following is a code sample using triple backticks ( ``` ) code fencing provided in Hugo. This is client side highlighting and does not require any special installation.\nvar num1, num2, sum num1 = prompt(\u0026#34;Enter first number\u0026#34;) num2 = prompt(\u0026#34;Enter second number\u0026#34;) sum = parseInt(num1) + parseInt(num2) // \u0026#34;+\u0026#34; means \u0026#34;add\u0026#34;  alert(\u0026#34;Sum = \u0026#34; + sum) // \u0026#34;+\u0026#34; means combine into a string The following is a code sample using the \u0026ldquo;highlight\u0026rdquo; shortcode provided in Hugo. This is server side highlighting and requires Python and Pygments to be installed.\nvar num1, num2, sum num1 = prompt(\u0026#34;Enter first number\u0026#34;) num2 = prompt(\u0026#34;Enter second number\u0026#34;) sum = parseInt(num1) + parseInt(num2) // \u0026#34;+\u0026#34; means \u0026#34;add\u0026#34;  alert(\u0026#34;Sum = \u0026#34; + sum) // \u0026#34;+\u0026#34; means combine into a string  And here is the same code with line numbers:\n1 var num1, num2, sum 2 num1 = prompt(\u0026#34;Enter first number\u0026#34;) 3 num2 = prompt(\u0026#34;Enter second number\u0026#34;) 4 sum = parseInt(num1) + parseInt(num2) // \u0026#34;+\u0026#34; means \u0026#34;add\u0026#34; 5 alert(\u0026#34;Sum = \u0026#34; + sum) // \u0026#34;+\u0026#34; means combine into a string "},{"id":6,"href":"/tags/example/","title":"example","parent":"Tags","content":""},{"id":7,"href":"/tags/","title":"Tags","parent":"","content":""},{"id":8,"href":"/intro/","title":"1. Introduction","parent":"","content":"In this section, I\u0026rsquo;ll try to explain what \u0026lsquo;dynamic questions\u0026rsquo; really refer to, and how you can use the QBM to create your own dynamic questions.\nIf you\u0026rsquo;ve already made dynamic questions yourself through the QBM, you can probably skim through most of the stuff in this part.\n[TODO: Links to each part in this section]\n"},{"id":9,"href":"/intro/dynamic-questions/","title":"1.1. What are Dynamic Questions?","parent":"1. Introduction","content":"Dynamic questions are used when we have a good conceptual question that we\u0026rsquo;d like to ask repeatedly, with different valued constants each time the question is displayed. In these cases, code can be used to randomise certain parameters in the question, and then generate the corresponding question text, answers, and solutions.\nAn example of a dynamic question, viewed several times, is shown below:\nAs you can see in the above image, the question changes each time the question is viewed, with different answers and solutions to go with the quadratic equation.\n There\u0026rsquo;s a lot of good uses for dynamic questions - for one, they\u0026rsquo;re an efficient way of providing diverse experiences to students as they build mathematical skills. More context behind the \u0026lsquo;why\u0026rsquo; on these questions will be covered in section 2.2.1. Context.\n "},{"id":10,"href":"/intro/using-the-qbm/","title":"1.2. Using the QBM","parent":"1. Introduction","content":"In our system, dynamic questions are created through directly writing PHP code in place of the usual text. To do so, after you\u0026rsquo;ve selected a round and level for your question, click on the \u0026ldquo;PHP\u0026rdquo; button in the editor:\nThe following text editor should appear, with automatically generated PHP tags (\u0026lt;?php and ?\u0026gt;) where PHP code should be written. Note that the closing ?\u0026gt; tag is important, and should not be removed to avoid any potential problems with how the code is run.\n Note: There currently appears to be a bug where the first time this window is loaded (or whenever you reset your browser cache), the editor might be stuck loading; simply re-opening the editor window will fix this.\n PHP code typed in the editor is saved after pressing the ‘update’ button. Note that the code (or its output) won’t be visible in the editor itself, but the output of the code can still be checked using the ‘preview’ button.\nPHP code must also be inserted into each answer box, as well as the solution; their sections will have a PHP editor of their own.\n Note: The \u0026lsquo;preview\u0026rsquo; button only works after you\u0026rsquo;ve selected a round and level for your question! If you attempt to write something in the solution box without having selected a round or level, the question can\u0026rsquo;t be loaded, and the preview will appear blank!\n  Note 2: The order of solutions in MCQs are always randomised - it is fine to set answer \u0026lsquo;A\u0026rsquo; as the correct solution each time.\n "},{"id":11,"href":"/intro/formatting-text/","title":"1.3. Formatting Text","parent":"1. Introduction","content":"When PHP calls echo on any string, it will ultimately be rendered as HTML. Because of this, text can be formatted by inserting the appropriate HTML tags into the strings.\nYou can try this yourself! As an example, enter the code below into the editor. You\u0026rsquo;ll see that the lines all apply formatting through the \u0026lt;b\u0026gt;, \u0026lt;i\u0026gt; and \u0026lt;u\u0026gt; markup tags.\n\u0026lt;?php echo \u0026#34;This text is normal. \u0026#34;; echo \u0026#34;\u0026lt;b\u0026gt;This text is bolded! \u0026lt;/b\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;i\u0026gt;This text is italicised! \u0026lt;/i\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;b\u0026gt;\u0026lt;u\u0026gt;This text is bolded \u0026lt;i\u0026gt;and\u0026lt;/i\u0026gt; underlined! \u0026lt;/u\u0026gt;\u0026lt;/b\u0026gt;\u0026#34;; ?\u0026gt;Furthermore, to add line breaks in your code, the newline character \\n will not work. For a line break, you\u0026rsquo;ll need to use the break tag \u0026lt;br/\u0026gt; instead. For example:\n\u0026lt;?php echo \u0026#34;Line one\u0026#34;; echo \u0026#34;\u0026lt;br/\u0026gt;\u0026#34;; echo \u0026#34;Line two\u0026lt;br/\u0026gt;Line three\u0026#34;; ?\u0026gt; As an aside, note that PHP directly puts the echo\u0026rsquo;d string into the HTML document itself, and the document is rendered after all the PHP code is run.\nThis means you could technically split out tags into separate strings, like this:\n\u0026lt;?php echo \u0026#34;Whatever you echo will be put together and \u0026lt;b\u0026#34;; echo \u0026#34;\u0026gt; directly \u0026lt;/\u0026#34;; echo \u0026#34;b\u0026gt; be rendered as HTML.\u0026#34; ?\u0026gt;And get this as output - with the resulting HTML that\u0026rsquo;s actually being rendered as shown on the right:\nIn most cases, you\u0026rsquo;d never want to do this on purpose - but this is something to look out for if your output appears to be weirdly formatted for no reason.\n"},{"id":12,"href":"/intro/asciimath/","title":"1.4. Mathematical Expressions with AsciiMath","parent":"1. Introduction","content":"We also have support for displaying mathematical expressions using the AsciiMath markup language - this was actually used in the example dynamic question you saw above.\nAny bit of text can be rendered as an AsciiMath expression by simply encasing it in backticks (the ` character).\n Note that this character is not the same as an apostrophe (')! You\u0026rsquo;d typically find this symbol on the top-left of a QWERTY keyboard.\n For instance, the example expression on the AsciiMath site can be included by writing the following directly in the text box itself:\nEquivalently, we could do this with the following PHP code:\n\u0026lt;?php echo \u0026#34;Sum of sequence of cubes: `sum_(i=1)^n i^3=((n(n+1))/2)^2`\u0026#34;; ?\u0026gt;In both cases, we\u0026rsquo;d get the same output:\nGenerally, using PHP to include AsciiMath in questions is more convenient, as most of the expressions we want to render will involve randomised constants. Ways of doing this will be covered more thoroughly in 3.1. Basic Randomisation.\n Note: You may need to split very long AsciiMath expressions into muliple parts so that they are rendered on different lines if required. Otherwise, the expresion will render entirely on one line and go off-screen.\nConsider a case where we show how to fully expand the above expression step-by-step, and use the following code:\necho \u0026#34;Sum of sequence of cubes: `sum_(i=1)^n i^3 = ((n(n+1))/2)^2 = (n(n+1))^2/4 = (n^2 (n+1)^2)/4 = (n^2(n^2 + 2n + 1))/4 = (n^4 + 2n^3 + n^2)/4`\u0026#34;; Unfortunately, if we render the entire thing in a single expression, it\u0026rsquo;ll be put all on one line. If the page isn\u0026rsquo;t wide enough, it\u0026rsquo;ll be cut-off halfway through:\nThe best way to deal with this is to split out the expression into multiple AsciMath expressions. While doing this, you can also use multiple strings and join them together with the dot (.) operator; this tends to make the expression a lot easier to read for yourself as well.\necho \u0026#34;Sum of sequence of cubes: \u0026#34; . \u0026#34;`sum_(i=1)^n i^3`\u0026#34; . \u0026#34;`= ((n(n+1))/2)^2`\u0026#34; . \u0026#34;`= (n(n+1))^2/4`\u0026#34; . \u0026#34;`= (n^2 (n+1)^2)/4`\u0026#34; . \u0026#34;`= (n^2(n^2 + 2n + 1))/4`\u0026#34; . \u0026#34;`= (n^4 + 2n^3 + n^2)/4`\u0026#34;;  "},{"id":13,"href":"/intro/editor-features/","title":"1.5. Useful Editor Features","parent":"1. Introduction","content":"The PHP editor is actually just a fancier version of the default \u0026lsquo;HTML Source\u0026rsquo; editor. Apart from syntax highlighting and autocompletion, there\u0026rsquo;s a few additional features of the editor that can allow you to write and edit code faster, including auto-indentation and a bunch of keyboard shortcuts.\nSome main useful shortcuts will probably be these:\n   Windows Mac Action     Alt-Shift-Up/Down Command-Option-Up/Down Copy (selected) lines up/down   Alt-Up/Down Option-Up/Down Move (selected) lines up/down   Tab Tab Indent (selection)   Shift-Tab Shift-Tab Outdent (selection)   Ctrl-Click Command-Click Add another cursor at clicked location   Ctrl-Alt-Up/Down Ctrl-Option-Up/Down Add another cursor above/below the current cursor(s)   Ctrl-F Command-F Find   Ctrl-H Command-Option-F Replace     A complete list of the shortcuts can be found here:\nhttps://github.com/ajaxorg/ace/wiki/Default-Keyboard-Shortcuts\n "},{"id":14,"href":"/categories/","title":"Categories","parent":"","content":""},{"id":15,"href":"/other/contact/","title":"Contact Info","parent":"Others","content":"If there\u0026rsquo;s stuff that doesn\u0026rsquo;t quite make sense or seems wrong, feel free to send me a message! While I\u0026rsquo;ll try to respond as soon as I can, do note that there are a lot of resources online that can help as well.\nHere are a few ways to contact me:\n Find me on the EV Slack!  Send a DM, or to the channel #wmc-questions or #omc-questions.   Email: jyim1120@gmail.com Messenger: jonathan.yim.121  Also note that there are other question writers on the Slack channel you can ask for help!\n"},{"id":16,"href":"/other/","title":"Others","parent":"","content":""}]